package quizgato;

import javax.swing.*;

public class FrmQuizgato extends javax.swing.JFrame {

    Lista l = new Lista();

    public FrmQuizgato() {
        initComponents();
        Dibujar.crearDibujo(areaDibujo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnBorrar = new javax.swing.JButton();
        bntAbrir = new javax.swing.JButton();
        bntGuardar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        cmbFigGeometrica = new javax.swing.JComboBox<>();
        areaDibujo = new javax.swing.JPanel();
        tdibujo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/delete.png"))); // NOI18N
        btnBorrar.setFocusable(false);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBorrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBorrar);

        bntAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/open.png"))); // NOI18N
        bntAbrir.setFocusable(false);
        bntAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(bntAbrir);

        bntGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/save.png"))); // NOI18N
        bntGuardar.setFocusable(false);
        bntGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(bntGuardar);

        btnSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/click.png"))); // NOI18N
        btnSeleccionar.setFocusable(false);
        btnSeleccionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSeleccionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSeleccionar);

        cmbFigGeometrica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Linea", "Rectangulo", "Circulo" }));
        cmbFigGeometrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFigGeometricaActionPerformed(evt);
            }
        });
        jToolBar1.add(cmbFigGeometrica);

        areaDibujo.setBackground(new java.awt.Color(255, 255, 255));
        areaDibujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                areaDibujoMouseClicked(evt);
            }
        });
        areaDibujo.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                areaDibujoComponentResized(evt);
            }
        });

        javax.swing.GroupLayout areaDibujoLayout = new javax.swing.GroupLayout(areaDibujo);
        areaDibujo.setLayout(areaDibujoLayout);
        areaDibujoLayout.setHorizontalGroup(
            areaDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        areaDibujoLayout.setVerticalGroup(
            areaDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
        );

        tdibujo.setText("tdibujo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(tdibujo)
                .addGap(78, 78, 78))
            .addComponent(areaDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tdibujo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(areaDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean graficando = false;
    int x0, y0, xSup, ySup, anchura, altura;


    private void cmbFigGeometricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFigGeometricaActionPerformed

    }//GEN-LAST:event_cmbFigGeometricaActionPerformed

    private void areaDibujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaDibujoMouseClicked

        drawShow(evt);
        
    }//GEN-LAST:event_areaDibujoMouseClicked

    private void areaDibujoComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_areaDibujoComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_areaDibujoComponentResized

    private void bntGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGuardarActionPerformed
        String nombreArchivo = Archivo.saveFile();

        if (l.haciaArchivo(nombreArchivo)) {
            JOptionPane.showMessageDialog(null, "El archivo ha sido guardado con exito");
        } else {
            JOptionPane.showMessageDialog(null, "Error al guardar el archivo");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bntGuardarActionPerformed

    private void bntAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAbrirActionPerformed
        // TODO add your handling code here:
        String nombreArchivo = Archivo.elegirArchivo();

        l.desdeArchivo(nombreArchivo);
        //l.mostrar(tblCoordenadas);

        int length = l.obtenerLongitud();

        for (int i = 0; i < length; i++) {
            drawShow(l.obtenerNodo(i).tipo,
                    l.obtenerNodo(i).Posx0, l.obtenerNodo(i).Posy0,
                    l.obtenerNodo(i).Posx1, l.obtenerNodo(i).Posy1);
        }
    }//GEN-LAST:event_bntAbrirActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        areaDibujo.removeAll();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
      
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQuizgato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQuizgato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQuizgato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQuizgato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmQuizgato().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel areaDibujo;
    private javax.swing.JButton bntAbrir;
    private javax.swing.JButton bntGuardar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox<String> cmbFigGeometrica;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel tdibujo;
    // End of variables declaration//GEN-END:variables

    private void drawShow(java.awt.event.MouseEvent evt) {
        if ("Linea".equals(cmbFigGeometrica.getSelectedItem())) {
            if (!graficando) {
                graficando = true;
                x0 = evt.getX();
                y0 = evt.getY();
            } else {
                graficando = false;
                int x1 = evt.getX();
                int y1 = evt.getY();
                Dibujar.trazarLinea(areaDibujo, x0, y0, x1, y1);

                l.agregar(new Nodo("Linea", x0, y0, x1, y1));
            }
        }
        if ("Rectangulo".equals(cmbFigGeometrica.getSelectedItem())) {
            if (!graficando) {
                graficando = true;
                xSup = evt.getX();
                ySup = evt.getY();
            } else {
                graficando = false;
                int x1 = evt.getX();
                int y1 = evt.getY();
                if (x1 - xSup < 0) {
                    int xtemp = x1;
                    x1 = xSup;
                    xSup = xtemp;
                    anchura = x1 - xSup;
                } else {
                    anchura = x1 - xSup;
                }
                if (y1 - ySup < 0) {
                    int ytemp = y1;
                    y1 = ySup;
                    ySup = ytemp;
                    altura = y1 - ySup;
                } else {
                    altura = y1 - ySup;
                }
                Dibujar.trazarRectangulo(areaDibujo, xSup, ySup, anchura, altura);
                l.agregar(new Nodo("Rectangulo", xSup, ySup, anchura, altura));
            }
        }
        if ("Circulo".equals(cmbFigGeometrica.getSelectedItem())) {
            if (!graficando) {
                graficando = true;
                xSup = evt.getX();
                ySup = evt.getY();
            } else {
                graficando = false;
                int x1 = evt.getX();
                int y1 = evt.getY();
                if (x1 - xSup < 0) {
                    int xtemp = x1;
                    x1 = xSup;
                    xSup = xtemp;
                    anchura = x1 - xSup;
                } else {
                    anchura = x1 - xSup;
                }
                if (y1 - ySup < 0) {
                    int ytemp = y1;
                    y1 = ySup;
                    ySup = ytemp;
                    altura = y1 - ySup;
                } else {
                    altura = y1 - ySup;
                }
                Dibujar.trazarCirculo(areaDibujo, xSup, ySup, anchura, altura);
                l.agregar(new Nodo("Circulo", xSup, ySup, anchura, altura));
            }
        }
    }

    private void drawShow(String tdibujo, int fx0, int fy0, int fx1, int fy1) {
        if ("Linea".equals(cmbFigGeometrica.getSelectedItem())) {
            x0 = fx0;
            y0 = fy0;
            int x1 = fx1;
            int y1 = fy1;

            Dibujar.trazarLinea(areaDibujo, x0, y0, x1, y1);

            l.agregar(new Nodo("Linea", x0, y0, x1, y1));
        }
        if ("Rectangulo".equals(cmbFigGeometrica.getSelectedItem())) {
            xSup = fx0;
            ySup = fy0;

            int x1 = fx1;
            int y1 = fy1;
            if (x1 - xSup < 0) {
                int xtemp = x1;
                x1 = xSup;
                xSup = xtemp;
                anchura = x1 - xSup;
            } else {
                anchura = x1 - xSup;
            }
            if (y1 - ySup < 0) {
                int ytemp = y1;
                y1 = ySup;
                ySup = ytemp;
                altura = y1 - ySup;
            } else {
                altura = y1 - ySup;
            }
            Dibujar.trazarRectangulo(areaDibujo, xSup, ySup, anchura, altura);
            l.agregar(new Nodo("Rectangulo", xSup, ySup, anchura, altura));
        }
        if ("Circulo".equals(cmbFigGeometrica.getSelectedItem())) {
            xSup = fx0;
            ySup = fy0;
            int x1 = fx1;
            int y1 = fy1;
            if (x1 - xSup < 0) {
                int xtemp = x1;
                x1 = xSup;
                xSup = xtemp;
                anchura = x1 - xSup;
            } else {
                anchura = x1 - xSup;
            }
            if (y1 - ySup < 0) {
                int ytemp = y1;
                y1 = ySup;
                ySup = ytemp;
                altura = y1 - ySup;
            } else {
                altura = y1 - ySup;
            }
            Dibujar.trazarCirculo(areaDibujo, xSup, ySup, anchura, altura);
            l.agregar(new Nodo("Circulo", xSup, ySup, anchura, altura));
        }
    }
}
